// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: trial.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Services {
  public static partial class GameLog
  {
    static readonly string __ServiceName = "services.GameLog";

    static readonly grpc::Marshaller<global::Services.HelloRequest> __Marshaller_services_HelloRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Services.HelloRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Services.HelloReply> __Marshaller_services_HelloReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Services.HelloReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Services.ParsingRequest> __Marshaller_services_ParsingRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Services.ParsingRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Services.JsonReply> __Marshaller_services_JsonReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Services.JsonReply.Parser.ParseFrom);

    static readonly grpc::Method<global::Services.HelloRequest, global::Services.HelloReply> __Method_MessageExamples = new grpc::Method<global::Services.HelloRequest, global::Services.HelloReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "MessageExamples",
        __Marshaller_services_HelloRequest,
        __Marshaller_services_HelloReply);

    static readonly grpc::Method<global::Services.ParsingRequest, global::Services.JsonReply> __Method_MainInteraction = new grpc::Method<global::Services.ParsingRequest, global::Services.JsonReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "MainInteraction",
        __Marshaller_services_ParsingRequest,
        __Marshaller_services_JsonReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Services.TrialReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of GameLog</summary>
    public abstract partial class GameLogBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Services.HelloReply> MessageExamples(global::Services.HelloRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Services.JsonReply> MainInteraction(global::Services.ParsingRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for GameLog</summary>
    public partial class GameLogClient : grpc::ClientBase<GameLogClient>
    {
      /// <summary>Creates a new client for GameLog</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public GameLogClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for GameLog that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public GameLogClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected GameLogClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected GameLogClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Services.HelloReply MessageExamples(global::Services.HelloRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MessageExamples(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Services.HelloReply MessageExamples(global::Services.HelloRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_MessageExamples, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Services.HelloReply> MessageExamplesAsync(global::Services.HelloRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MessageExamplesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Services.HelloReply> MessageExamplesAsync(global::Services.HelloRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_MessageExamples, null, options, request);
      }
      public virtual global::Services.JsonReply MainInteraction(global::Services.ParsingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MainInteraction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Services.JsonReply MainInteraction(global::Services.ParsingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_MainInteraction, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Services.JsonReply> MainInteractionAsync(global::Services.ParsingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MainInteractionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Services.JsonReply> MainInteractionAsync(global::Services.ParsingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_MainInteraction, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override GameLogClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new GameLogClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(GameLogBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_MessageExamples, serviceImpl.MessageExamples)
          .AddMethod(__Method_MainInteraction, serviceImpl.MainInteraction).Build();
    }

  }
}
#endregion
