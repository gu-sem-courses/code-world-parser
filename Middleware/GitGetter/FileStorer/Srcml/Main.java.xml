<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="E:\Programmering\DIT355_Project\middleware/GitGetter2/FileStorer/you.incredibly.close/javaprojects/Main.java"><package>package <name><name>by</name><operator>.</operator><name>softclub</name><operator>.</operator><name>hometask1</name></name>;</package>

<import>import <name><name>by</name><operator>.</operator><name>softclub</name><operator>.</operator><name>hometask1</name><operator>.</operator><name>ammunition</name><operator>.</operator><name>Ammunition</name></name>;</import>
<import>import <name><name>by</name><operator>.</operator><name>softclub</name><operator>.</operator><name>hometask1</name><operator>.</operator><name>ammunition</name><operator>.</operator><name>Gloves</name></name>;</import>
<import>import <name><name>by</name><operator>.</operator><name>softclub</name><operator>.</operator><name>hometask1</name><operator>.</operator><name>ammunition</name><operator>.</operator><name>Helmet</name></name>;</import>
<import>import <name><name>by</name><operator>.</operator><name>softclub</name><operator>.</operator><name>hometask1</name><operator>.</operator><name>motorcyclist</name><operator>.</operator><name>Motorcyclist</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>

<class><specifier>public</specifier> class <name>Main</name> <block>{
    <function><specifier>public</specifier> <specifier>static</specifier> <type><name>void</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name><name>String</name><index>[]</index></name></type> <name>args</name></decl></parameter>)</parameter_list> <block>{
        <decl_stmt><decl><type><name>Motorcyclist</name></type> <name>motorcyclist</name> <init>= <expr><operator>new</operator> <call><name>Motorcyclist</name><argument_list>(<argument><expr><literal type="string">"James"</literal></expr></argument>,<argument><expr><literal type="string">"Smith"</literal></expr></argument>, <argument><expr><literal type="number">25</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>Ammunition</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>AmmunitionAction</name></type> <name>ammunitionAction</name> <init>= <expr><operator>new</operator> <call><name>AmmunitionAction</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>ammunitionAction</name><operator>.</operator><name>buyAmmunition</name></name><argument_list>(<argument><expr><call><name><name>motorcyclist</name><operator>.</operator><name>getAmmunitions</name></name><argument_list>()</argument_list></call></expr></argument>,<argument><expr><literal type="string">"Gloves"</literal></expr></argument>, <argument><expr><literal type="string">"Helmet"</literal></expr></argument>, <argument><expr><literal type="string">"Jacket"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><name>motorcyclist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>Ammunition</name></argument>&gt;</argument_list></name></type> <name>foundAmmunArrList</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>foundAmmunArrList</name> <operator>=</operator> <call><name><name>ammunitionAction</name><operator>.</operator><name>findAmmunitionsByCost</name></name><argument_list>(<argument><expr><call><name><name>motorcyclist</name><operator>.</operator><name>getAmmunitions</name></name><argument_list>()</argument_list></call></expr></argument>,<argument><expr><literal type="number">5</literal></expr></argument>,<argument><expr><literal type="number">151</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <for>for <control>(<init><decl><type><name>Ammunition</name></type> <name>ammun</name><range>: <expr><name>foundAmmunArrList</name></expr></range></decl></init>)</control><block>{
            <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><name>ammun</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></for>
    }</block></function>
}</block></class>
</unit>
